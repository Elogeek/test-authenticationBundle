lexik_jwt_authentication:
    # required for token creation
    secret_key: '%env(resolve:JWT_SECRET_KEY)%'
    # required for token verification
    public_key: '%env(resolve:JWT_PUBLIC_KEY)%'
    # required for token creation
    pass_phrase: '%env(JWT_PASSPHRASE)%'
    # identifie l'user via son id
    user_identity_field: id

    # token encoding/decoding settings
   # encoder:
        # token encoder/decoder service - default implementation based on the lcobucci/jwt library
      #  service: lexik_jwt_authentication.encoder.lcobucci

        # encryption algorithm used by the encoder service
       # signature_algorithm: RS256

    # token extraction settings
   # token_extractors:
        # look for a token as Authorization Header
        #authorization_header:
          #  enabled: true
           # prefix: Bearer
           # name: Authorization

        # check token in a cookie
      #  cookie:
            #enabled: true
            #name: BEARER

        #set_cookies:
         #   BEARER: ~
        # check token in query string parameter
      #  query_parameter:
        #    enabled: false
        #    name: bearer

        # check token in a cookie
       # split_cookie:
          #  enabled: false
          #  cookies:
         #       - jwt_hp
           #     - jwt_s

        # remove the token from the response body when using cookies
      #  remove_token_from_body_when_cookies_used: true